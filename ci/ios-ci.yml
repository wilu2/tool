build_ios:
  tags:
      - ios-builder
  stage: build
  script:
      - mkdir build_arm && cd build_arm && cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/ios.toolchain.cmake -DPLATFORM=OS .. && make install && cd ${CI_PROJECT_DIR}
      - mkdir build_x86 && cd build_x86 && cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/ios.toolchain.cmake -DPLATFORM=SIMULATOR .. && make install && cd ${CI_PROJECT_DIR}
      - mkdir build_x64 && cd build_x64 && cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/ios.toolchain.cmake -DPLATFORM=SIMULATOR64 .. && make install && cd ${CI_PROJECT_DIR}
      - mkdir include && mkdir lib
      - cp build_arm/install/include/* include/
      - lipo -create build_arm/install/lib/lib${TARGET_NAME}.a build_x86/install/lib/lib${TARGET_NAME}.a build_x64/install/lib/lib${TARGET_NAME}.a -output lib/lib${TARGET_NAME}.a
          # 这里的是为了别人下载库的时候不用运行程序就可以知道版本号 格式 2020-02-02-master-6c9169f06d332b00bad
      - echo "$(date -r $(git log -1  --format="%at") +%Y-%m-%d)-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA:0:16}" > ${CI_PROJECT_DIR}/version.txt

  artifacts:
    name: ${TARGET_NAME}_${CI_JOB_NAME}
    paths:
      - include
      - lib
      - version.txt
      - README.md
    expire_in: 1 week

release_ios:
  tags:
    - ios-builder
  stage: release
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "release"
    - echo "$(date -d @$(git log -1  --format="%at") +"%Y-%m-%d")-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA:0:16}" > ${CI_PROJECT_DIR}/version.txt
  dependencies:
    - build_ios
  artifacts:
    name: ${TARGET_NAME}_${CI_JOB_NAME}_${CI_COMMIT_TAG}
    paths:
      - include
      - lib
      - version.txt
      - README.md